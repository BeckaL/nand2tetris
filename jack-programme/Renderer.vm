function Renderer.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push constant 56
pop this 0
push constant 55
pop this 1
push constant 7
pop this 2
push constant 5
pop this 3
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
push constant 0
push this 0
push constant 4
call Math.multiply 2
push constant 2
add
push this 1
push constant 4
call Math.multiply 2
push constant 2
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
return
function Renderer.dispose 0
push argument 0
pop pointer 0
push pointer 0
call memory.deAlloc 1
pop temp 0
push constant 0
return
function Renderer.drawState 4
push argument 0
pop pointer 0
label WHILE_EXP0
push local 0
push constant 4
lt
not
if-goto WHILE_END0
push local 0
push argument 1
add
pop pointer 1
push that 0
pop local 2
label WHILE_EXP1
push local 1
push constant 4
lt
not
if-goto WHILE_END1
push local 1
push local 2
add
pop pointer 1
push that 0
pop local 3
push pointer 0
push local 1
push local 0
push local 3
call Renderer.drawBlock 4
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
push constant 0
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Renderer.drawBlock 3
push argument 0
pop pointer 0
push argument 1
push this 0
call Math.multiply 2
pop local 1
push argument 2
push this 1
call Math.multiply 2
pop local 2
push constant 3
push local 1
add
push constant 3
push local 2
add
push this 0
push constant 2
sub
push local 1
add
push this 1
push constant 2
sub
push local 2
add
call Screen.drawRectangle 4
pop temp 0
push argument 3
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 3
push constant 100
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 3
pop local 0
goto IF_END1
label IF_FALSE1
push constant 2
pop local 0
label IF_END1
push constant 2
push argument 2
push this 3
call Math.multiply 2
add
push local 0
push argument 1
push this 2
call Math.multiply 2
add
call Output.moveCursor 2
pop temp 0
push argument 3
call Output.printInt 1
pop temp 0
label IF_FALSE0
push constant 0
return
